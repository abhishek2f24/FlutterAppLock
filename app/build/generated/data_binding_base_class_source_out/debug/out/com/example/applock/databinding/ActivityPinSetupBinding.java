// Generated by view binder compiler. Do not edit!
package com.example.applock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.applock.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPinSetupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btn0;

  @NonNull
  public final Button btn1;

  @NonNull
  public final Button btn2;

  @NonNull
  public final Button btn3;

  @NonNull
  public final Button btn4;

  @NonNull
  public final Button btn5;

  @NonNull
  public final Button btn6;

  @NonNull
  public final Button btn7;

  @NonNull
  public final Button btn8;

  @NonNull
  public final Button btn9;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final GridLayout keypadLayout;

  @NonNull
  public final View pinDot1;

  @NonNull
  public final View pinDot2;

  @NonNull
  public final View pinDot3;

  @NonNull
  public final View pinDot4;

  @NonNull
  public final LinearLayout pinIndicatorLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView txtError;

  private ActivityPinSetupBinding(@NonNull ConstraintLayout rootView, @NonNull Button btn0,
      @NonNull Button btn1, @NonNull Button btn2, @NonNull Button btn3, @NonNull Button btn4,
      @NonNull Button btn5, @NonNull Button btn6, @NonNull Button btn7, @NonNull Button btn8,
      @NonNull Button btn9, @NonNull Button btnClear, @NonNull Button btnDelete,
      @NonNull TextView instructionText, @NonNull GridLayout keypadLayout, @NonNull View pinDot1,
      @NonNull View pinDot2, @NonNull View pinDot3, @NonNull View pinDot4,
      @NonNull LinearLayout pinIndicatorLayout, @NonNull Toolbar toolbar,
      @NonNull TextView txtError) {
    this.rootView = rootView;
    this.btn0 = btn0;
    this.btn1 = btn1;
    this.btn2 = btn2;
    this.btn3 = btn3;
    this.btn4 = btn4;
    this.btn5 = btn5;
    this.btn6 = btn6;
    this.btn7 = btn7;
    this.btn8 = btn8;
    this.btn9 = btn9;
    this.btnClear = btnClear;
    this.btnDelete = btnDelete;
    this.instructionText = instructionText;
    this.keypadLayout = keypadLayout;
    this.pinDot1 = pinDot1;
    this.pinDot2 = pinDot2;
    this.pinDot3 = pinDot3;
    this.pinDot4 = pinDot4;
    this.pinIndicatorLayout = pinIndicatorLayout;
    this.toolbar = toolbar;
    this.txtError = txtError;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPinSetupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPinSetupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pin_setup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPinSetupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn0;
      Button btn0 = ViewBindings.findChildViewById(rootView, id);
      if (btn0 == null) {
        break missingId;
      }

      id = R.id.btn1;
      Button btn1 = ViewBindings.findChildViewById(rootView, id);
      if (btn1 == null) {
        break missingId;
      }

      id = R.id.btn2;
      Button btn2 = ViewBindings.findChildViewById(rootView, id);
      if (btn2 == null) {
        break missingId;
      }

      id = R.id.btn3;
      Button btn3 = ViewBindings.findChildViewById(rootView, id);
      if (btn3 == null) {
        break missingId;
      }

      id = R.id.btn4;
      Button btn4 = ViewBindings.findChildViewById(rootView, id);
      if (btn4 == null) {
        break missingId;
      }

      id = R.id.btn5;
      Button btn5 = ViewBindings.findChildViewById(rootView, id);
      if (btn5 == null) {
        break missingId;
      }

      id = R.id.btn6;
      Button btn6 = ViewBindings.findChildViewById(rootView, id);
      if (btn6 == null) {
        break missingId;
      }

      id = R.id.btn7;
      Button btn7 = ViewBindings.findChildViewById(rootView, id);
      if (btn7 == null) {
        break missingId;
      }

      id = R.id.btn8;
      Button btn8 = ViewBindings.findChildViewById(rootView, id);
      if (btn8 == null) {
        break missingId;
      }

      id = R.id.btn9;
      Button btn9 = ViewBindings.findChildViewById(rootView, id);
      if (btn9 == null) {
        break missingId;
      }

      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.keypadLayout;
      GridLayout keypadLayout = ViewBindings.findChildViewById(rootView, id);
      if (keypadLayout == null) {
        break missingId;
      }

      id = R.id.pinDot1;
      View pinDot1 = ViewBindings.findChildViewById(rootView, id);
      if (pinDot1 == null) {
        break missingId;
      }

      id = R.id.pinDot2;
      View pinDot2 = ViewBindings.findChildViewById(rootView, id);
      if (pinDot2 == null) {
        break missingId;
      }

      id = R.id.pinDot3;
      View pinDot3 = ViewBindings.findChildViewById(rootView, id);
      if (pinDot3 == null) {
        break missingId;
      }

      id = R.id.pinDot4;
      View pinDot4 = ViewBindings.findChildViewById(rootView, id);
      if (pinDot4 == null) {
        break missingId;
      }

      id = R.id.pinIndicatorLayout;
      LinearLayout pinIndicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (pinIndicatorLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txtError;
      TextView txtError = ViewBindings.findChildViewById(rootView, id);
      if (txtError == null) {
        break missingId;
      }

      return new ActivityPinSetupBinding((ConstraintLayout) rootView, btn0, btn1, btn2, btn3, btn4,
          btn5, btn6, btn7, btn8, btn9, btnClear, btnDelete, instructionText, keypadLayout, pinDot1,
          pinDot2, pinDot3, pinDot4, pinIndicatorLayout, toolbar, txtError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
